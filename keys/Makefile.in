SHELL := /bin/bash
AR     = @AR@
RANLIB = @RANLIB@
CC     = @CC@
CFLAGS = @CFLAGS@ -fPIC -I. -I./include -I../src @CPPFLAGS@ @DEFS@
LIBS   = @LIBS@
LDFLAGS = @LDFLAGS@

prefix=@prefix@
exec_prefix=@exec_prefix@
LIBDIR = @libdir@
INCLUDEDIR = @includedir@

PKGCONFIGDIR = $(LIBDIR)/pkgconfig

ifdef DEBUG
CFLAGS += -DDEBUG=$(DEBUG) -g
endif

C4GH_LD_SONAME = #-Wl #,-soname,libc4gh-keys.so.2
C4GH_OBJECTS = kdf.o key.o ssh.o c4gh.o

LIBOPENSSH = openssh/libopenssh.a
LIBCOMPAT = openbsd-compat/libopenbsd-compat.a

all: 

.PHONY: all clean install
.SUFFIXES: .c .o

all: libc4gh-keys.a $(LIBOPENSSH) $(LIBCOMPAT)

$(LIBDIR) $(INCLUDEDIR) $(PKGCONFIGDIR):
	@echo "Creating: $@"
	@install -d $@

libc4gh-keys.a: $(C4GH_OBJECTS)
	$(AR) rv $@ $(C4GH_OBJECTS)
	$(RANLIB) $@

$(C4GH_OBJECTS): ../src/config.h

$(LIBOPENSSH) $(LIBCOMPAT):
	make -C $(@D)

%.o: %.c
ifdef DEBUG
	@echo "Compiling $< (debug: $(DEBUG))"
else
	@echo "Compiling $<"
endif
	@$(CC) $(CFLAGS) -c -o $@ $<

clean:
	-rm -f libc4gh-keys.a $(C4GH_OBJECTS)
	-@rm -f *~ 

veryclean: clean
	-make -C openbsd-compat clean
	-make -C openssh clean

distclean: clean
	-rm -f Makefile .depend.old
	-make -C openssh $@
	-make -C openbsd-compat $@


###################################
## Dependencies
###################################
depend: depend-rebuild
	rm -f .depend.bak

depend-rebuild:
	mv .depend .depend.old
	rm -f .depend
	touch ../src/config.h .depend
	makedepend -w1000 -I. -I./include/crypt4gh @DEFS@ -Y. -f .depend *.c 2>/dev/null
	(echo '# Automatically generated by makedepend.'; \
	 echo '# Run "make depend" to rebuild.'; sort .depend ) >.depend.tmp
	mv .depend.tmp .depend
	rm -f .depend.bak
	mv .depend.old .depend.bak

depend-check: depend-rebuild
	cmp .depend .depend.bak || (echo .depend stale && exit 1)

# @KEYS_DEPEND@
